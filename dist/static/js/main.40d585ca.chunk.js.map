{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","notification","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","Form","onSubmit","Group","controlId","onChange","Control","placeholder","Text","Button","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40d585ca.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions.js'\n\nconst SignedInLinks = (props) => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to=\"/create\">New Post</NavLink></li>\n        <li><a href=\"/\" onClick={props.signOut}>Logout</a></li>\n        <li><NavLink to=\"/\" className=\"btn btn-floating purple\">{props.profile.initials}</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    \n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      }).then(() => {\n        dispatch({ type: 'Firestore_success'});\n      }).catch((err) => {\n        dispatch({ type: 'Firestore_Error', err});\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Register</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    );\n}\n\nexport default SignedOutLinks;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">Bulletin Board</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n   // console.log(state.firebase.auth.uid);\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title \">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return (\n    \n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}  \n    </div>\n  )\n}\n\nexport default ProjectList","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications","import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\n\nclass Dashboard extends Component {\n    \n  render() {\n    const { projects, auth, notifications} = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />  \n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n        \n          <ProjectList projects={projects} />\n         \n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n          <Notifications notifications={notifications} />\n        \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notification\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', limit: 4, orderBy: ['createdAt', 'desc']},\n    { collection: 'notification', limit: 10, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to='/signin' /> \n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(ownProps.match.params.id);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    //user: user,\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'projects'\n  }])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\nimport {Form, Button} from 'react-bootstrap'\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n\n        <Form onSubmit={this.handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <Form.Group controlId=\"email\" onChange={this.handleChange}>\n            <Form.Control type=\"email\" placeholder=\"Email\" />\n          </Form.Group>\n          <br/>\n          <Form.Group controlId=\"password\" onChange={this.handleChange}>\n            <Form.Control type=\"password\" placeholder=\"Password\"/>\n            { authError ? <Form.Text className=\"red-text\"> {authError} </Form.Text> : null }\n          </Form.Group>\n          <Button className=\"btn blue lighten-1\" type=\"submit\">\n            Login\n          </Button>\n      </Form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\nimport {Form, Button} from 'react-bootstrap'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n      \n        <Form onSubmit={this.handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Register</h5>\n          <Form.Group controlId=\"email\" onChange={this.handleChange}>\n            <Form.Control type=\"email\" placeholder=\"Email\" />\n          </Form.Group>\n          <br/>\n          <Form.Group controlId=\"password\" onChange={this.handleChange}>\n            <Form.Control type=\"password\" placeholder=\"Password\"/>\n          </Form.Group>\n          <br/>\n          <Form.Group controlId=\"firstName\" onChange={this.handleChange}>\n            <Form.Control type=\"text\" placeholder=\"First Name\" />\n          </Form.Group>\n          <br/>\n          <Form.Group controlId=\"lastName\" onChange={this.handleChange}>\n            <Form.Control type=\"text\" placeholder=\"Last Name\" />\n            { authError ? <Form.Text className=\"red-text\"> {authError} </Form.Text> : null }\n          </Form.Group>\n          <Button className=\"btn blue lighten-1\" type=\"submit\">\n            Register\n          </Button>\n      </Form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\nimport {Form, Button} from 'react-bootstrap'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n    return (\n      <div className=\"container\">\n        <Form onSubmit={this.handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Write a Post/Project</h5>\n          <Form.Group controlId=\"title\" onChange={this.handleChange}>\n            <Form.Control type=\"text\" placeholder=\"Title\" />\n            <Form.Text className=\"text-muted\">\n            </Form.Text>\n          </Form.Group>\n          <br/>\n          <Form.Group controlId=\"content\" onChange={this.handleChange}>\n            <Form.Control type=\"text\" placeholder=\"Content\"/>\n          </Form.Group>\n          <Button className=\"btn blue lighten-1\" type=\"submit\">\n            Create\n          </Button>\n      </Form>\n      </div>\n      \n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n  return (dispatch, getState, {getFirestore}) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n    });\n  }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n    case 'Firestore_success':\n      console.log('Firestore success')\n      return {\n        ...state,\n        authError: null\n      }\n    case 'Firestore_Error':\n      console.log('Firestore error');\n      return {\n        ...state,\n        authError: action.err.message\n      }\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success')\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error')\n      return {\n        ...state,\n        authError: action.err.message\n      }\n\n    default:\n      return state\n  }\n};\n\nexport default authReducer;","const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n          console.log('created project: ' + action.project);\n          return state;\n        case 'CREATE_PROJECT_ERROR':\n          console.log('created error: ' + action.err);\n          return state;\n          // case 'RETRIEVED_USER_PROJECTS':\n          //   console.log('retrieved user projects: ' + action.project);\n          //   return state;\n          // case 'ERROR_RETRIEVING_USER_PROJECTS':\n          //   console.log('receiving error: ' + action.err);\n          //   return state;\n        default:\n          return state;\n    }\n};\n\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer\n\n// the key name will be the data property on the state object","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyATQhfQXGO3dx1-9GZ91R0OQtn8E9apYxU\",\n    authDomain: \"reactjswfbase.firebaseapp.com\",\n    databaseURL: \"https://reactjswfbase.firebaseio.com\",\n    projectId: \"reactjswfbase\",\n    storageBucket: \"reactjswfbase.appspot.com\",\n    messagingSenderId: \"454825300718\",\n    appId: \"1:454825300718:web:c257b47b233ed4fbae59ff\",\n    measurementId: \"G-ZHNV31EH7Q\"\n  };\n  // // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  // // firebase.analytics();\n  firebase.firestore();\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, createFirestoreInstance, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase} from 'react-redux-firebase'\n\nimport firebase from './config/fbConfig'\n\n  \n// const store = createStore(rootReducer, \n//     compose(\n//         applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n// ));\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase) \n  )\n)\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n  }\n const rrfProps = {\n      firebase,\n      config: rrfConfig,\n      dispatch: store.dispatch,\n      createFirestoreInstance // <- needed if using firestore\n    }\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>, \n  document.getElementById('root'));\nserviceWorker.unregister()\n"],"sourceRoot":""}